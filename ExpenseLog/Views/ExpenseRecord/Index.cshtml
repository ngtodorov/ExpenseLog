
@model IEnumerable<ExpenseLog.Models.ExpenseRecord>
@{
    ViewBag.Title = "Index";
}

<h4>Expense Records</h4>

<hr />
@using (Html.BeginForm())
{
    <div class="container">
        <div class="row">
            <div class="col-sm-auto padding-5">
                @Html.DropDownList("expenseTypeIDFilter", (ViewBag.ExpenseTypes as IEnumerable<SelectListItem>), htmlAttributes: new { @class = "form-control", @tag = "index" })
            </div>
            <div class="col-sm-auto padding-5">
                @Html.DropDownList("expenseEntityIDFilter", (ViewBag.ExpenseEntities as IEnumerable<SelectListItem>), htmlAttributes: new { @class = "form-control" })
            </div>
            <div class="col-sm padding-5">
                <input name="fromDateFilter" class="form-control text-box single-line valid" id="fromDateFilter" data-date-format="mm/dd/yyyy" aria-invalid="false" aria-describedby="ExpenseDate-error" type="datetime" value="@ViewBag.FilterDateFrom" data-provide="datepicker" data-val="true" data-val-date="The field Date must be a date.">
            </div>
            <div class="col-sm padding-5">
                <input name="toDateFilter" class="form-control text-box single-line valid" id="toDateFilter" data-date-format="mm/dd/yyyy" aria-invalid="false" aria-describedby="ExpenseDate-error" type="datetime" value="@ViewBag.FilterDateTo" data-provide="datepicker" data-val="true" data-val-date="The field Date must be a date.">
            </div>
            <div class="col-sm padding-5">
                <input name="descriptionSearchFilter" class="form-control text-box single-line valid" id="descriptionSearchFilter" value="@ViewBag.FilterDescriptionSearch" placeholder="search here">
            </div>
            <div class="col-sm">
                <input class="btn btn-outline-primary btn-sm" type="submit" value="Filter" />
                @Html.ActionLink("Excel", "ExportToExcel", "ExpenseRecord", new { expenseTypeIDFilter = ViewBag.FilterExpenseTypeID, expenseEntityIDFilter = ViewBag.FilterExpenseEntityID, fromDateFilter = ViewBag.FilterDateFrom, toDateFilter = ViewBag.FilterDateTo, descriptionSearchFilter = ViewBag.FilterDescriptionSearch, sortOrder = ViewBag.SortOrder } , new { @class = "btn btn-outline-primary btn-sm" })
            </div>
        </div>
    </div>
}

<hr />

<table class="table table-striped table-bordered table-hover table-sm" id="table1" name="table1" style="width:100%">
    
        <tr>
            <th style="width:10px">
                @Html.ActionLink("+", "Create", "ExpenseRecord", new { expenseTypeIDFilter = ViewBag.FilterExpenseTypeID, expenseEntityIDFilter = ViewBag.FilterExpenseEntityID, fromDateFilter = ViewBag.FilterDateFrom, toDateFilter = ViewBag.FilterDateTo, descriptionSearchFilter = ViewBag.FilterDescriptionSearch, sortOrder = ViewBag.SortOrder }, new { @class = "btn btn-outline-primary btn-sm", title = "New Record", id = "createExpenseRecordLink" })
            </th>
            <th>
                @Html.ActionLink("Date", "Index", new { expenseTypeIDFilter = ViewBag.FilterExpenseTypeID, expenseEntityIDFilter = ViewBag.FilterExpenseEntityID, fromDateFilter = ViewBag.FilterDateFrom, toDateFilter = ViewBag.FilterDateTo, descriptionSearchFilter = ViewBag.FilterDescriptionSearch, sortOrder = ViewBag.DateSortParam })
            </th>
            <th>
                @Html.ActionLink("Entity", "Index", new { expenseTypeIDFilter = ViewBag.FilterExpenseTypeID, expenseEntityIDFilter = ViewBag.FilterExpenseEntityID, fromDateFilter = ViewBag.FilterDateFrom, toDateFilter = ViewBag.FilterDateTo, descriptionSearchFilter = ViewBag.FilterDescriptionSearch, sortOrder = ViewBag.NameSortParam })
            </th>
            <th>
                @Html.ActionLink("Description", "Index", new { expenseTypeIDFilter = ViewBag.FilterExpenseTypeID, expenseEntityIDFilter = ViewBag.FilterExpenseEntityID, fromDateFilter = ViewBag.FilterDateFrom, toDateFilter = ViewBag.FilterDateTo, descriptionSearchFilter = ViewBag.FilterDescriptionSearch, sortOrder = ViewBag.DescrSortParam })
            </th>
            <th>
                @Html.ActionLink("Price", "Index", new { expenseTypeIDFilter = ViewBag.FilterExpenseTypeID, expenseEntityIDFilter = ViewBag.FilterExpenseEntityID, fromDateFilter = ViewBag.FilterDateFrom, toDateFilter = ViewBag.FilterDateTo, descriptionSearchFilter = ViewBag.FilterDescriptionSearch, sortOrder = ViewBag.PriceSortParam })
            </th>

            <th>
                @Html.DisplayName("Att")
            </th>
        </tr>
    
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.ActionLink("[]", "Edit", "ExpenseRecord",
                    new {
                        id = item.ExpenseRecordID,
                        expenseTypeIDFilter = ViewBag.FilterExpenseTypeID,
                        expenseEntityIDFilter = ViewBag.FilterExpenseEntityID,
                        fromDateFilter = ViewBag.FilterDateFrom,
                        toDateFilter = ViewBag.FilterDateTo,
                        descriptionSearchFilter = ViewBag.FilterDescriptionSearch,
                        sortOrder = ViewBag.SortOrder},
                    new { @class = "btn btn-outline-primary btn-sm",
                        @title = "Edit Record", id = "editExpenseRecordLink" + @item.ExpenseRecordID })
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ExpenseDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ExpenseEntity.ExpenseEntityName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ExpenseDescription)
            </td>
            <td class="text-right">
                @Html.DisplayFor(modelItem => item.ExpensePrice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ExpenseAttachments.Count)
            </td>

        </tr>
    }

    <tr>
        <td colspan="4"></td>

        <td class="text-right">
            <b>$@ViewBag.Total</b>
        </td>

        <td colspan="1"></td>

    </tr>

</table>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/custom/customscripts.js")

}