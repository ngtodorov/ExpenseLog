@model ExpenseLog.Models.ExpenseRecord
@{
    ViewBag.Title = "Edit";
}
@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", id = "formExpenseRecord" }))
{
    @Html.AntiForgeryToken()
    @Html.Hidden("attachmentsJson", "")
    @Html.Hidden("userID", (object)ViewBag.UserID)
    @Html.Hidden("attachmentUploadWebAPIUrl", (object)ViewBag.AttachmentUploadWebAPIUrl)

    @Html.Hidden("FilterExpenseTypeID", (object)ViewBag.FilterExpenseTypeID)
    @Html.Hidden("FilterExpenseEntityID", (object)ViewBag.FilterExpenseEntityID)
    @Html.Hidden("FilterDateFrom", (object)ViewBag.FilterDateFrom)
    @Html.Hidden("FilterDateTo", (object)ViewBag.FilterDateTo)
    @Html.Hidden("FilterDescriptionSearch", (object)ViewBag.FilterDescriptionSearch)

    <div class="form-horizontal">
        <h4>Edit Expense Record</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ExpenseRecordID)
        <div class="form-group">
            @Html.LabelFor(model => model.ExpenseTypeID, "Type", htmlAttributes: new { @class = "control-label col-md-2", @style = "color:blue" })
            <div class="col-md-4">
                @Html.DropDownList("expenseTypeID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ExpenseTypeID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ExpenseEntityID, "Entity", htmlAttributes: new { @class = "control-label col-md-2", @style = "color:blue" })
            <div class="col-md-4">
                @Html.DropDownList("expenseEntityID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ExpenseEntityID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ExpenseDate, htmlAttributes: new { @class = "control-label col-md-2", @style = "color:blue" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.ExpenseDate, new { htmlAttributes = new { @class = "form-control", @data_provide = "datepicker" } })
                @Html.ValidationMessageFor(model => model.ExpenseDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ExpensePrice, htmlAttributes: new { @class = "control-label col-md-2", @style = "color:blue" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.ExpensePrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExpensePrice, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ExpenseDescription, htmlAttributes: new { @class = "control-label col-md-2", @style = "color:blue" })
            <div class="col-md-4">
                @Html.TextAreaFor(model => model.ExpenseDescription, 4, 45, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ExpenseDescription, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr />
        <div class="form-row">
            <div class="col input-group-sm">
                <div class="col-md-offset-2 col-md-10">
                    <!-- Submit Button -->
                    <input type="submit" id="buttonSubmit" value="Submit" class="btn btn-outline-primary btn-sm" />
                    <!-- Cancel Button -->
                    @Html.ActionLink("Cancel", "Index", "ExpenseRecord", null, new { @class = "btn btn-outline-primary btn-sm", @id = "buttonCancel" })
                    <!-- Delete Button -->
                    @Html.ActionLink("Delete", "Delete", "ExpenseRecord", new { id = Model.ExpenseRecordID }, new { @class = "btn btn-outline-primary btn-sm", title = "Delete Record", onclick = "return confirm('Are you sure you wish to delete this Expense Record?');", @id = "buttonDelete" })
                    <!-- Select Files and Upload: Displays a 'Select Files' button that uses a File Upload control to select files to be uploaded and calls the JS function: DisplayFilesToUpload() that lists the file name and size for all files to be uploaded.                   -->
                    <input type="file" id="file" name="selectFiles" class="btn btn-outline-primary btn-sm" onchange="DisplayFilesToUpload()" multiple accept=".png,.jpg,.jpeg,.gif,.tif,.tiff,.bmp" />
                </div>
            </div>
        </div>

        <hr />

        <!--
        --------------------------------------------------------------------------------------------------------------------------------------------
        -------------------------------------------------------  ATTACHMENTS BEGIN -----------------------------------------------------------------
        --------------------------------------------------------------------------------------------------------------------------------------------
        -->
        @* This gets populated from the DisplayFilesToUpload() JS function*@
        <p id="FilesLabel"></p>
        @if (Model.ExpenseAttachments != null && Model.ExpenseAttachments.Count > 0)
        {

            <!-- Images used to open the lightbox -->
            <div class="row">
                @{
                    int i = 0;
                    foreach(ExpenseLog.Models.ExpenseAttachment attachment in Model.ExpenseAttachments)
                    {
                        i++;
                        <div class="column">
                            <button id="deleteImageButton-@attachment.ID" type="button" onclick="markAttachmentForDeletion(@attachment.ID); return false;" class="btn btn-outline-primary btn-sm" title="Click to delete attachment">X</button>
                            <img src="@attachment.ExpenseAttachmentUri" style="width:100%" onclick="openModal();currentSlide(@i)" class="hover-shadow cursor">
                        </div>
                    }
                }
            </div>

            <!-- The Modal/Lightbox -->
            <div id="myModal" class="modal">
                <span class="close cursor" onclick="closeModal()">&times;</span>
                <div class="modal-content">
                    @{

                        int k = 0;
                        foreach (ExpenseLog.Models.ExpenseAttachment attachment in Model.ExpenseAttachments)
                        {
                            k++;
                            <div class="mySlides">
                                <div class="numbertext">@k / @Model.ExpenseAttachments.Count</div>
                                <img src="@attachment.ExpenseAttachmentUri" style="width:100%">
                            </div>
                        }

                    }

                    <!-- Next/previous controls -->
                    <a class="prev" onclick="plusSlides(-1)">&#10094;</a>
                    <a class="next" onclick="plusSlides(1)">&#10095;</a>
                    <!-- Caption text -->
                    <div class="caption-container">
                        <p id="caption"></p>
                    </div>

                </div>
            </div>

            @Html.Hidden("FilesToDelete")
        }
        <!--
        --------------------------------------------------------------------------------------------------------------------------------------------
        -------------------------------------------------------  ATTACHMENTS  END ------------------------------------------------------------------
        --------------------------------------------------------------------------------------------------------------------------------------------
        -->

    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/custom/lightbox.js")
    @Scripts.Render("~/Scripts/custom/customscripts.js")
    <script>

        //Lists the file name and size for all files to be uploaded by updating the <p id="FilesToUpload"></p> control
        function DisplayFilesToUpload() {
            var element = document.getElementById("file");
            var html = "";

            html = "<div style='color:blue'>Files To Upload:</div>";

            for (var i = 0; i < element.files.length; i++) {

                var file = element.files[i];
                if ('name' in file) { html += file.name + " ("; }
                if ('size' in file) { html += "size: " + Math.round(file.size / 1024) + " kB)<br>"; }
            }
            document.getElementById("FilesLabel").innerHTML = html;
        }

        //--- mark an attachment for deletion or remove from deletion list
        function markAttachmentForDeletion(attachID) {
            var attachIDStr = "[" + attachID + "]";

            var button = document.getElementById("deleteImageButton-" + attachID);
            var filesToDelete = document.getElementById("FilesToDelete").value;

            if (button.innerText == "X") {
                button.innerText = "!";
                button.style.color = "white";
                button.style.backgroundColor = "red";
                button.style.font.bold();
                button.title = "Marked for deletion. Click to restore"

                if (filesToDelete.indexOf(attachIDStr) < 0) {
                    document.getElementById("FilesToDelete").value = filesToDelete + attachIDStr; //--- add to the "delete files" list 
                }
            }
            else {
                button.innerText = "X";
                button.style.color = "";
                button.style.backgroundColor = "";
                button.title = "Click to delete attachment";

                if (filesToDelete.indexOf(attachIDStr) >= 0) {
                    document.getElementById("FilesToDelete").value = filesToDelete.replace(attachIDStr, "").trim(); //--- remove from the "delete files" list
                }

            }
        }

    </script>


}
